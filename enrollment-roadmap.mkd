---
title: Device Enrollment in IETF protocols -- a roadmap
abbrev: device enrollment
docname: draft-richardson-enrollment-roadmap-00

# stand_alone: true

ipr: trust200902
area: Internet
wg: 6tisch Working Group
kw: Internet-Draft
cat: info

coding: us-ascii
pi:    # can use array (if all yes) or hash here
  toc: yes
  sortrefs:   # defaults to yes
  symrefs: yes

author:
      -
        ins: M. Richardson
        name: Michael Richardson
        org: Sandelman Software Works
        email: mcr+ietf@sandelman.ca

normative:
  RFC2119:
  RFC7049:
  RFC7250:
  RFC5652:
  RFC8152:
  I-D.ietf-anima-voucher:
  I-D.ietf-anima-bootstrapping-keyinfra:
  I-D.richardson-anima-ace-constrained-voucher:
  RFC8152:
  RFC5652:
  RFC6347:
  RFC7030:
  I-D.ietf-core-object-security:
  I-D.selander-ace-cose-ecdhe:
  I-D.vanderstok-ace-coap-est:
  I-D.ietf-netconf-zerotouch:
  I-D.ietf-6tisch-minimal-security:
  I-D.ietf-6tisch-dtsecurity-zerotouch-join:
  ieee802-1AR:
    target: "http://standards.ieee.org/findstds/standard/802.1AR-2009.html"
    title: "IEEE 802.1AR Secure Device Identifier"
    author:
      ins: "IEEE Standard"
    date: 2009

informative:
  I-D.richardson-anima-state-for-joinrouter:
  pledge:
    title: "Dictionary.com Unabridged"
    target: "http://dictionary.reference.com/browse/pledge"
    author:
      -
        name: Dictionary.com
    date: 2015

  duckling:
    title: "The resurrecting duckling: security issues for ad-hoc wireless networks"
    target: "https://www.cl.cam.ac.uk/~fms27/papers/1999-StajanoAnd-duckling.pdf"
    author:
      -
        ins: F. Stajano
        name: Frank Stajano
      -
        ins: R. Anderson
        name: Ross Anderson
    date: 1999


--- abstract

This document provides an overview of enrollment or imprinting mechanisms
in current IETF protocols.

--- middle

# Introduction

There are numerous mechanisms being proposed to solve the problem
of securely introducing a new devices into an existing managed network.

This document provides an overview of the different mechanisms showing what
technologies are common.  The document starts with a diagram showing the
various components and how they go together to form five enrollment
scenarios.

# Components of enrollment solutions

This diagram is taken from {{I-D.ietf-anima-bootstrapping-keyinfra}}, which
is where this work started.

<figure>
INSERT_TEXT_FROM_FILE component-diagram.txt END
</figure>

Five major components are described:

1. pledge: The node that is attempting to enroll.
2. proxy: A node that is within one layer-2 hop of the pledge that is helping.
3. domain registrar: the Join Registrar/Coordinator (JRC) that will determine
eligibility of the pledge.
4. MASA: the representative of the manufacturer that has a pre-established
trust relationship with the pledge.
5. the domain PKI (if any)

# Map of Enrollment solution

<figure>
INSERT_TEXT_FROM_FILE building-block-diagram.txt END
</figure>

# Components

## generic voucher semantics

The abstract semantics of the voucher, described in YANG, are in {{I-D.ietf-anima-voucher}}.

## constrained voucher

The semantics of the constrained voucher, represented in CBOR,
are described in {{I-D.richardson-anima-ace-constrained-voucher}}.

This document does NOT yet have a home.

## JSON format voucher

The semantics of the basic voucher, represented in JSON,
are described in {{I-D.ietf-anima-voucher}}.

## COSE-8152

In constrained systems the voucher is signed using the COSE mechanism
described in {{RFC8152}}.

## standard signature (CMS)

In un-constrained systems the voucher is signed using the Cryptographic
Message Syntax (CMS) described in {{RFC5652}}.

## EDHOC

On constrained and challenged networks, the session key management can be
formed by {{I-D.selander-ace-cose-ecdhe}}.

This document does NOT have a home.

The CoAP-EST layer on top is described by {{I-D.vanderstok-ace-coap-est}}

## EST-COAPS 2/DTLS sec(urity)

On unconstrained networks, the session key management is provided by {{RFC6347}}.
The CoAP-EST layer on top is described by {{I-D.vanderstok-ace-coap-est}}.

The ACE WG has agreed to adopt this document.

## EST-HTTPS TLS sec(urity)

On unconstrained networks with unconstrained nodes, the EST layer and
session key management is described by {{RFC7030}} as modified by
{{I-D.ietf-anima-bootstrapping-keyinfra}} (BRSKI).

## constrained object security (OSCORE)

On constained networks with constrained nodes, the CoAP transactions
are secured by {{I-D.ietf-core-object-security}} using symmetric keys.
The symmetric key may be pre-shared (for 6tisch minimal security), or
MAY be derived using EDHOC.

## Pledge traffic proxy mechanisms

Traffic between the Pledge and the JRC does not flow directly as the pledge
does not typically have a globally reachable address, nor does it have any
network access keys (whether WEP, WPA, 802.1x, or 802.15.4 keys).

Communication between the pledge and JRC is mediated by a proxy.  This is
primarily to protect the network against attacks.  The proxy mechanism is
provided by as many nodes as can afford to as a benefit to the network, and
therefore MUST be as light weight as possible.  There are therefore stateless
mechanisms and stateful mechanisms.  The costs of the various methods is
analysized in {{I-D.richardson-anima-state-for-joinrouter}}.

### COAP proxy,stateless

The CoAP proxy mechanism uses the OSCORE Context Hint to statelessly store
the address of the proxy within the CoAP structure.  It is described in {{I-D.ietf-6tisch-minimal-security}}.

## DTLS proxy

There has been no specific DTLS specific stateless proxy described, although
the mechanism described by the Thread Group is being considered, if it can be
referenced easily.

## IPIP proxy,stateless

An IPIP proxy mechanism uses a layer of IP-in-IP header (protocol 98) to
encapsulate the traffic between Join Proxy and JRC.  It has some complexities
to implement on typical POSIX platforms.  It is intended to be described in
{{I-D.ietf-6tisch-dtsecurity-zerotouch-join}}, in an Appendix. Another home
for the text is also desired.

## circuit proxy stateful

The circuit proxy method utilitizes either an application layer gateway
(which in canonical 1990-era implementation requires a process per
connection), or the use of NAT66.  It maintains some state for each
connection whether TCP or UDP.

It is this most expensive and most easily abused, but also the most widely
available, code-wise.

# call-home ssh/tls/usbkey

The NETCONF call-home mechanism assumes that the device can get basic
connectivity, enough for an out "outgoing" TCP connection to the
manufacturer. 

# manufacturer authorized signing authority (MASA)

The MASA is the manufacturers anchor of the manufacturer/pledge trust
relationship that is established at the factory where the pledge is built.

# Enrollment Mechanisms

## NETCONF

The NETCONF WG is describing this in {{I-D.ietf-netconf-zerotouch}} document.

## BRSKI

The ANIMA WG is describing this in {{I-D.ietf-anima-bootstrapping-keyinfra}} document.

## Transition to Constrained Bootstrap

The bulk of this work has no home as yet.  It is distinguished from BRSKI in
that it uses DTLS (rather than TLS) and constrained (CBOR) vouchers.  
It is distinguished from 6tisch Zero Touch in that uses CMS to sign rather
than COSE.

The ACE WG is going to adopt {{I-D.vanderstok-ace-coap-est}}.

## 6tisch Zero Touch

The 6tisch WG is describing this in {{I-D.ietf-6tisch-dtsecurity-zerotouch-join}} document.

## 6tisch minimal security

The 6tisch WG is describing this in {{I-D.ietf-6tisch-minimal-security}}
document. This mechanism does enrollment in a single request/response
message, but requires at least one "touch" to pre-share symmetric keys.

All other methods are considered zero "touch".

# Security Considerations

This document includes a tradeoff of the security attributes of the different
protocols, and so the entire document contains security advice.

# IANA Considerations

This document does not define any new protocols, and therefore does not
have any IANA Considerations.

# Acknowledgements

TBD

--- back

